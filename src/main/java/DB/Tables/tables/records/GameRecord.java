/*
 * This file is generated by jOOQ.
 */
package DB.Tables.tables.records;


import DB.Tables.tables.Game;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GameRecord extends UpdatableRecordImpl<GameRecord> implements Record6<Integer, Integer, String, String, LocalDate, Boolean> {

    private static final long serialVersionUID = 898450476;

    /**
     * Setter for <code>fwdb.game.game_id</code>.
     */
    public void setGameId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>fwdb.game.game_id</code>.
     */
    public Integer getGameId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>fwdb.game.stadium_id</code>.
     */
    public void setStadiumId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>fwdb.game.stadium_id</code>.
     */
    public Integer getStadiumId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>fwdb.game.home_team</code>.
     */
    public void setHomeTeam(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>fwdb.game.home_team</code>.
     */
    public String getHomeTeam() {
        return (String) get(2);
    }

    /**
     * Setter for <code>fwdb.game.away_team</code>.
     */
    public void setAwayTeam(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>fwdb.game.away_team</code>.
     */
    public String getAwayTeam() {
        return (String) get(3);
    }

    /**
     * Setter for <code>fwdb.game.Date</code>.
     */
    public void setDate(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>fwdb.game.Date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>fwdb.game.finished</code>.
     */
    public void setFinished(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>fwdb.game.finished</code>.
     */
    public Boolean getFinished() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, String, String, LocalDate, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Integer, String, String, LocalDate, Boolean> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Game.GAME.GAME_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Game.GAME.STADIUM_ID;
    }

    @Override
    public Field<String> field3() {
        return Game.GAME.HOME_TEAM;
    }

    @Override
    public Field<String> field4() {
        return Game.GAME.AWAY_TEAM;
    }

    @Override
    public Field<LocalDate> field5() {
        return Game.GAME.DATE;
    }

    @Override
    public Field<Boolean> field6() {
        return Game.GAME.FINISHED;
    }

    @Override
    public Integer component1() {
        return getGameId();
    }

    @Override
    public Integer component2() {
        return getStadiumId();
    }

    @Override
    public String component3() {
        return getHomeTeam();
    }

    @Override
    public String component4() {
        return getAwayTeam();
    }

    @Override
    public LocalDate component5() {
        return getDate();
    }

    @Override
    public Boolean component6() {
        return getFinished();
    }

    @Override
    public Integer value1() {
        return getGameId();
    }

    @Override
    public Integer value2() {
        return getStadiumId();
    }

    @Override
    public String value3() {
        return getHomeTeam();
    }

    @Override
    public String value4() {
        return getAwayTeam();
    }

    @Override
    public LocalDate value5() {
        return getDate();
    }

    @Override
    public Boolean value6() {
        return getFinished();
    }

    @Override
    public GameRecord value1(Integer value) {
        setGameId(value);
        return this;
    }

    @Override
    public GameRecord value2(Integer value) {
        setStadiumId(value);
        return this;
    }

    @Override
    public GameRecord value3(String value) {
        setHomeTeam(value);
        return this;
    }

    @Override
    public GameRecord value4(String value) {
        setAwayTeam(value);
        return this;
    }

    @Override
    public GameRecord value5(LocalDate value) {
        setDate(value);
        return this;
    }

    @Override
    public GameRecord value6(Boolean value) {
        setFinished(value);
        return this;
    }

    @Override
    public GameRecord values(Integer value1, Integer value2, String value3, String value4, LocalDate value5, Boolean value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GameRecord
     */
    public GameRecord() {
        super(Game.GAME);
    }

    /**
     * Create a detached, initialised GameRecord
     */
    public GameRecord(Integer gameId, Integer stadiumId, String homeTeam, String awayTeam, LocalDate date, Boolean finished) {
        super(Game.GAME);

        set(0, gameId);
        set(1, stadiumId);
        set(2, homeTeam);
        set(3, awayTeam);
        set(4, date);
        set(5, finished);
    }
}
