/*
 * This file is generated by jOOQ.
 */
package DB.Tables;


import DB.Tables.tables.Alert;
import DB.Tables.tables.AssociationRepresentative;
import DB.Tables.tables.Coach;
import DB.Tables.tables.CoachInTeam;
import DB.Tables.tables.ErrorLog;
import DB.Tables.tables.EventCard;
import DB.Tables.tables.EventGoal;
import DB.Tables.tables.EventInjury;
import DB.Tables.tables.EventLog;
import DB.Tables.tables.EventOffside;
import DB.Tables.tables.EventPenalty;
import DB.Tables.tables.EventSwitchPlayers;
import DB.Tables.tables.Game;
import DB.Tables.tables.GamesInSeason;
import DB.Tables.tables.League;
import DB.Tables.tables.ManagerInTeams;
import DB.Tables.tables.OwnedTeams;
import DB.Tables.tables.Player;
import DB.Tables.tables.PlayerInTeam;
import DB.Tables.tables.PointsPolicy;
import DB.Tables.tables.Referee;
import DB.Tables.tables.RefereeInGame;
import DB.Tables.tables.RefereeInSeason;
import DB.Tables.tables.SchedulingPolicy;
import DB.Tables.tables.Season;
import DB.Tables.tables.Stadium;
import DB.Tables.tables.StadiumHomeTeams;
import DB.Tables.tables.SystemAdmin;
import DB.Tables.tables.Systemuser;
import DB.Tables.tables.Team;
import DB.Tables.tables.TeamManager;
import DB.Tables.tables.TeamOwner;
import DB.Tables.tables.TeamsInSeason;
import DB.Tables.tables.UserComplaint;
import DB.Tables.tables.UserRoles;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Fwdb extends SchemaImpl {

    private static final long serialVersionUID = 1109205500;

    /**
     * The reference instance of <code>fwdb</code>
     */
    public static final Fwdb FWDB = new Fwdb();

    /**
     * The table <code>fwdb.alert</code>.
     */
    public final Alert ALERT = Alert.ALERT;

    /**
     * The table <code>fwdb.association_representative</code>.
     */
    public final AssociationRepresentative ASSOCIATION_REPRESENTATIVE = AssociationRepresentative.ASSOCIATION_REPRESENTATIVE;

    /**
     * The table <code>fwdb.coach</code>.
     */
    public final Coach COACH = Coach.COACH;

    /**
     * The table <code>fwdb.coach_in_team</code>.
     */
    public final CoachInTeam COACH_IN_TEAM = CoachInTeam.COACH_IN_TEAM;

    /**
     * The table <code>fwdb.error_log</code>.
     */
    public final ErrorLog ERROR_LOG = ErrorLog.ERROR_LOG;

    /**
     * The table <code>fwdb.event_card</code>.
     */
    public final EventCard EVENT_CARD = EventCard.EVENT_CARD;

    /**
     * The table <code>fwdb.event_goal</code>.
     */
    public final EventGoal EVENT_GOAL = EventGoal.EVENT_GOAL;

    /**
     * The table <code>fwdb.event_injury</code>.
     */
    public final EventInjury EVENT_INJURY = EventInjury.EVENT_INJURY;

    /**
     * The table <code>fwdb.event_log</code>.
     */
    public final EventLog EVENT_LOG = EventLog.EVENT_LOG;

    /**
     * The table <code>fwdb.event_offside</code>.
     */
    public final EventOffside EVENT_OFFSIDE = EventOffside.EVENT_OFFSIDE;

    /**
     * The table <code>fwdb.event_penalty</code>.
     */
    public final EventPenalty EVENT_PENALTY = EventPenalty.EVENT_PENALTY;

    /**
     * The table <code>fwdb.event_switch_players</code>.
     */
    public final EventSwitchPlayers EVENT_SWITCH_PLAYERS = EventSwitchPlayers.EVENT_SWITCH_PLAYERS;

    /**
     * The table <code>fwdb.game</code>.
     */
    public final Game GAME = Game.GAME;

    /**
     * The table <code>fwdb.games_in_season</code>.
     */
    public final GamesInSeason GAMES_IN_SEASON = GamesInSeason.GAMES_IN_SEASON;

    /**
     * The table <code>fwdb.league</code>.
     */
    public final League LEAGUE = League.LEAGUE;

    /**
     * The table <code>fwdb.manager_in_teams</code>.
     */
    public final ManagerInTeams MANAGER_IN_TEAMS = ManagerInTeams.MANAGER_IN_TEAMS;

    /**
     * The table <code>fwdb.owned_teams</code>.
     */
    public final OwnedTeams OWNED_TEAMS = OwnedTeams.OWNED_TEAMS;

    /**
     * The table <code>fwdb.player</code>.
     */
    public final Player PLAYER = Player.PLAYER;

    /**
     * The table <code>fwdb.player_in_team</code>.
     */
    public final PlayerInTeam PLAYER_IN_TEAM = PlayerInTeam.PLAYER_IN_TEAM;

    /**
     * The table <code>fwdb.points_policy</code>.
     */
    public final PointsPolicy POINTS_POLICY = PointsPolicy.POINTS_POLICY;

    /**
     * The table <code>fwdb.referee</code>.
     */
    public final Referee REFEREE = Referee.REFEREE;

    /**
     * The table <code>fwdb.referee_in_game</code>.
     */
    public final RefereeInGame REFEREE_IN_GAME = RefereeInGame.REFEREE_IN_GAME;

    /**
     * The table <code>fwdb.referee_in_season</code>.
     */
    public final RefereeInSeason REFEREE_IN_SEASON = RefereeInSeason.REFEREE_IN_SEASON;

    /**
     * The table <code>fwdb.scheduling_policy</code>.
     */
    public final SchedulingPolicy SCHEDULING_POLICY = SchedulingPolicy.SCHEDULING_POLICY;

    /**
     * The table <code>fwdb.season</code>.
     */
    public final Season SEASON = Season.SEASON;

    /**
     * The table <code>fwdb.stadium</code>.
     */
    public final Stadium STADIUM = Stadium.STADIUM;

    /**
     * The table <code>fwdb.stadium_home_teams</code>.
     */
    public final StadiumHomeTeams STADIUM_HOME_TEAMS = StadiumHomeTeams.STADIUM_HOME_TEAMS;

    /**
     * The table <code>fwdb.system_admin</code>.
     */
    public final SystemAdmin SYSTEM_ADMIN = SystemAdmin.SYSTEM_ADMIN;

    /**
     * The table <code>fwdb.systemuser</code>.
     */
    public final Systemuser SYSTEMUSER = Systemuser.SYSTEMUSER;

    /**
     * The table <code>fwdb.team</code>.
     */
    public final Team TEAM = Team.TEAM;

    /**
     * The table <code>fwdb.team_manager</code>.
     */
    public final TeamManager TEAM_MANAGER = TeamManager.TEAM_MANAGER;

    /**
     * The table <code>fwdb.team_owner</code>.
     */
    public final TeamOwner TEAM_OWNER = TeamOwner.TEAM_OWNER;

    /**
     * The table <code>fwdb.teams_in_season</code>.
     */
    public final TeamsInSeason TEAMS_IN_SEASON = TeamsInSeason.TEAMS_IN_SEASON;

    /**
     * The table <code>fwdb.user_complaint</code>.
     */
    public final UserComplaint USER_COMPLAINT = UserComplaint.USER_COMPLAINT;

    /**
     * The table <code>fwdb.user_roles</code>.
     */
    public final UserRoles USER_ROLES = UserRoles.USER_ROLES;

    /**
     * No further instances allowed
     */
    private Fwdb() {
        super("fwdb", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            Alert.ALERT,
            AssociationRepresentative.ASSOCIATION_REPRESENTATIVE,
            Coach.COACH,
            CoachInTeam.COACH_IN_TEAM,
            ErrorLog.ERROR_LOG,
            EventCard.EVENT_CARD,
            EventGoal.EVENT_GOAL,
            EventInjury.EVENT_INJURY,
            EventLog.EVENT_LOG,
            EventOffside.EVENT_OFFSIDE,
            EventPenalty.EVENT_PENALTY,
            EventSwitchPlayers.EVENT_SWITCH_PLAYERS,
            Game.GAME,
            GamesInSeason.GAMES_IN_SEASON,
            League.LEAGUE,
            ManagerInTeams.MANAGER_IN_TEAMS,
            OwnedTeams.OWNED_TEAMS,
            Player.PLAYER,
            PlayerInTeam.PLAYER_IN_TEAM,
            PointsPolicy.POINTS_POLICY,
            Referee.REFEREE,
            RefereeInGame.REFEREE_IN_GAME,
            RefereeInSeason.REFEREE_IN_SEASON,
            SchedulingPolicy.SCHEDULING_POLICY,
            Season.SEASON,
            Stadium.STADIUM,
            StadiumHomeTeams.STADIUM_HOME_TEAMS,
            SystemAdmin.SYSTEM_ADMIN,
            Systemuser.SYSTEMUSER,
            Team.TEAM,
            TeamManager.TEAM_MANAGER,
            TeamOwner.TEAM_OWNER,
            TeamsInSeason.TEAMS_IN_SEASON,
            UserComplaint.USER_COMPLAINT,
            UserRoles.USER_ROLES);
    }
}
