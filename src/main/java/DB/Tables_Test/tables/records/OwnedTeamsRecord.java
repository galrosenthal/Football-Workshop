/*
 * This file is generated by jOOQ.
 */
package DB.Tables_Test.tables.records;


import DB.Tables_Test.tables.OwnedTeams;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OwnedTeamsRecord extends UpdatableRecordImpl<OwnedTeamsRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = -1855310045;

    /**
     * Setter for <code>fwdb_test.owned_teams.username</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>fwdb_test.owned_teams.username</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>fwdb_test.owned_teams.team_name</code>.
     */
    public void setTeamName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>fwdb_test.owned_teams.team_name</code>.
     */
    public String getTeamName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>fwdb_test.owned_teams.appointer</code>.
     */
    public void setAppointer(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>fwdb_test.owned_teams.appointer</code>.
     */
    public String getAppointer() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return OwnedTeams.OWNED_TEAMS.USERNAME;
    }

    @Override
    public Field<String> field2() {
        return OwnedTeams.OWNED_TEAMS.TEAM_NAME;
    }

    @Override
    public Field<String> field3() {
        return OwnedTeams.OWNED_TEAMS.APPOINTER;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public String component2() {
        return getTeamName();
    }

    @Override
    public String component3() {
        return getAppointer();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public String value2() {
        return getTeamName();
    }

    @Override
    public String value3() {
        return getAppointer();
    }

    @Override
    public OwnedTeamsRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public OwnedTeamsRecord value2(String value) {
        setTeamName(value);
        return this;
    }

    @Override
    public OwnedTeamsRecord value3(String value) {
        setAppointer(value);
        return this;
    }

    @Override
    public OwnedTeamsRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OwnedTeamsRecord
     */
    public OwnedTeamsRecord() {
        super(OwnedTeams.OWNED_TEAMS);
    }

    /**
     * Create a detached, initialised OwnedTeamsRecord
     */
    public OwnedTeamsRecord(String username, String teamName, String appointer) {
        super(OwnedTeams.OWNED_TEAMS);

        set(0, username);
        set(1, teamName);
        set(2, appointer);
    }
}
