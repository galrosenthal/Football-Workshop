/*
 * This file is generated by jOOQ.
 */
package DB.Tables_Test.tables.records;


import DB.Tables_Test.tables.RefereeInGame;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RefereeInGameRecord extends UpdatableRecordImpl<RefereeInGameRecord> implements Record2<String, Integer> {

    private static final long serialVersionUID = -2107380339;

    /**
     * Setter for <code>fwdb_test.referee_in_game.username</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>fwdb_test.referee_in_game.username</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>fwdb_test.referee_in_game.game_id</code>.
     */
    public void setGameId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>fwdb_test.referee_in_game.game_id</code>.
     */
    public Integer getGameId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return RefereeInGame.REFEREE_IN_GAME.USERNAME;
    }

    @Override
    public Field<Integer> field2() {
        return RefereeInGame.REFEREE_IN_GAME.GAME_ID;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public Integer component2() {
        return getGameId();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public Integer value2() {
        return getGameId();
    }

    @Override
    public RefereeInGameRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public RefereeInGameRecord value2(Integer value) {
        setGameId(value);
        return this;
    }

    @Override
    public RefereeInGameRecord values(String value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RefereeInGameRecord
     */
    public RefereeInGameRecord() {
        super(RefereeInGame.REFEREE_IN_GAME);
    }

    /**
     * Create a detached, initialised RefereeInGameRecord
     */
    public RefereeInGameRecord(String username, Integer gameId) {
        super(RefereeInGame.REFEREE_IN_GAME);

        set(0, username);
        set(1, gameId);
    }
}
