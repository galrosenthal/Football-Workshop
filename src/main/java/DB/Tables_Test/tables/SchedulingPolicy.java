/*
 * This file is generated by jOOQ.
 */
package DB.Tables_Test.tables;


import DB.Tables_Test.FwdbTest;
import DB.Tables_Test.Keys;
import DB.Tables_Test.tables.records.SchedulingPolicyRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchedulingPolicy extends TableImpl<SchedulingPolicyRecord> {

    private static final long serialVersionUID = 220505225;

    /**
     * The reference instance of <code>fwdb_test.scheduling_policy</code>
     */
    public static final SchedulingPolicy SCHEDULING_POLICY = new SchedulingPolicy();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SchedulingPolicyRecord> getRecordType() {
        return SchedulingPolicyRecord.class;
    }

    /**
     * The column <code>fwdb_test.scheduling_policy.scheduling_id</code>.
     */
    public final TableField<SchedulingPolicyRecord, Integer> SCHEDULING_ID = createField(DSL.name("scheduling_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>fwdb_test.scheduling_policy.games_Per_Season</code>.
     */
    public final TableField<SchedulingPolicyRecord, Integer> GAMES_PER_SEASON = createField(DSL.name("games_Per_Season"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>fwdb_test.scheduling_policy.games_Per_Day</code>.
     */
    public final TableField<SchedulingPolicyRecord, Integer> GAMES_PER_DAY = createField(DSL.name("games_Per_Day"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>fwdb_test.scheduling_policy.minimum_Rest_Days</code>.
     */
    public final TableField<SchedulingPolicyRecord, Integer> MINIMUM_REST_DAYS = createField(DSL.name("minimum_Rest_Days"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>fwdb_test.scheduling_policy</code> table reference
     */
    public SchedulingPolicy() {
        this(DSL.name("scheduling_policy"), null);
    }

    /**
     * Create an aliased <code>fwdb_test.scheduling_policy</code> table reference
     */
    public SchedulingPolicy(String alias) {
        this(DSL.name(alias), SCHEDULING_POLICY);
    }

    /**
     * Create an aliased <code>fwdb_test.scheduling_policy</code> table reference
     */
    public SchedulingPolicy(Name alias) {
        this(alias, SCHEDULING_POLICY);
    }

    private SchedulingPolicy(Name alias, Table<SchedulingPolicyRecord> aliased) {
        this(alias, aliased, null);
    }

    private SchedulingPolicy(Name alias, Table<SchedulingPolicyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SchedulingPolicy(Table<O> child, ForeignKey<O, SchedulingPolicyRecord> key) {
        super(child, key, SCHEDULING_POLICY);
    }

    @Override
    public Schema getSchema() {
        return FwdbTest.FWDB_TEST;
    }

    @Override
    public Identity<SchedulingPolicyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SCHEDULING_POLICY;
    }

    @Override
    public UniqueKey<SchedulingPolicyRecord> getPrimaryKey() {
        return Keys.KEY_SCHEDULING_POLICY_PRIMARY;
    }

    @Override
    public List<UniqueKey<SchedulingPolicyRecord>> getKeys() {
        return Arrays.<UniqueKey<SchedulingPolicyRecord>>asList(Keys.KEY_SCHEDULING_POLICY_PRIMARY);
    }

    @Override
    public SchedulingPolicy as(String alias) {
        return new SchedulingPolicy(DSL.name(alias), this);
    }

    @Override
    public SchedulingPolicy as(Name alias) {
        return new SchedulingPolicy(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SchedulingPolicy rename(String name) {
        return new SchedulingPolicy(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SchedulingPolicy rename(Name name) {
        return new SchedulingPolicy(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
